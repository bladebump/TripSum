# 第一阶段：构建前端
FROM node:20-alpine AS frontend-builder

WORKDIR /app

# 构建时参数
ARG VITE_API_URL

# 复制前端依赖文件
COPY frontend/package*.json ./

# 安装依赖
RUN npm ci

# 复制前端源代码
COPY frontend/ .

# 构建前端应用
RUN npm run build

# 第二阶段：Nginx 服务器
FROM nginx:alpine

# 安装必要工具
RUN apk add --no-cache curl

# 从构建阶段复制前端文件
COPY --from=frontend-builder /app/dist /usr/share/nginx/html

# 复制 Nginx 配置文件
COPY docker/nginx/nginx.conf /etc/nginx/nginx.conf
COPY docker/nginx/default.conf /etc/nginx/conf.d/default.conf

# 创建运行时配置脚本（用于动态替换 API URL）
RUN cat > /docker-entrypoint.sh << 'EOF'
#!/bin/sh
if [ -n "$VITE_API_URL" ]; then
  find /usr/share/nginx/html -type f \( -name "*.js" -o -name "*.mjs" \) -exec \
    sed -i "s|VITE_API_URL_PLACEHOLDER|${VITE_API_URL}|g" {} \;
fi
nginx -g "daemon off;"
EOF

RUN chmod +x /docker-entrypoint.sh

# 暴露端口
EXPOSE 80
EXPOSE 443

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# 启动命令
ENTRYPOINT ["/docker-entrypoint.sh"]